// Вывести на экран стих «Every hunter wants…» таким образом,
// чтобы каждый «цвет» начинался с новой строки и соответствующим количеством табуляций

#include "pch.h"
#include <iostream>

using namespace std;

int main()
{
	// Используем ESCAPE-последовательность "\x1b[...m" для цветного вывода текста,
	// где "\x1b" обозначает символ ESC (десятичный ASCII код 27),
	// а вместо "..." подставляются значения атрибутов текста, цвета текста и цвета фона.
	// Значения можно комбинировать, перечисляя их через точку с запятой.
	//
	// Атрибуты:
	// 0 - нормальный режим
	// 1 - жирный
	// 4 - подчеркнутый
	// 5 - мигающий
	// 7 - инвертированные цвета
	// 8 - невидимый
	//
	// Цвет текста:
	// 30 - черный
	// 31 - красный
	// 32 - зеленый
	// 33 - желтый
	// 34 - синий
	// 35 - пурпурный
	// 36 - голубой
	// 37 - белый
	//
	// Цвет фона:
	// 40 - черный
	// 41 - красный
	// 42 - зеленый
	// 43 - желтый
	// 44 - синий
	// 45 - пурпурный
	// 46 - голубой
	// 47 - белый
	//
	// Например:
	/*cout << "\x1b[31mTest\x1b[0m" // выводит слово "Test" красными (31) буквами
		<< "\r\n\t" << "\x1b[37;43mTest\x1b[0m" // выводит слово "Test" белыми (37) буквами на желтом (43) фоне
		<< "\r\n\t\t" << "\x1b[4;35mTest\x1b[0m" // выводит слово "Test" пурпурными (35) буквами с подчеркиванием (4)
		<< endl;*/
	//
	// Во всех трех случаях после слова Test идет последовательность \x1b[0m,
	// которая просто сбрасывает стиль оформления на стандартный.
	//
	// Еще пример:
	/*cout << "\r\n" << "\x1b[1;31mString\x1b[0m \x1b[4;35;42mwith\x1b[0m \x1b[34;45mdifferent\x1b[0m \x1b[1;33mstyles\x1b[0m"
		<< endl;*/

	cout << "\x1b[31m" // устанавливаем красные (31) буквы
		<< "Every"
		<< "\x1b[0m\n" // сбрасывает стиль оформления на стандартный
		<< "\t\x1b[37m" // устанавливаем белые (37) буквы - вместо оранжевого
		<< "Hunter"
		<< "\x1b[0m\n"
		<< "\t\t\x1b[33m" // устанавливаем желтые (33) буквы
		<< "Wants"
		<< "\x1b[0m\n"
		<< "\t\t\t\x1b[32m" // устанавливаем зеленые (32) буквы
		<< "To know"
		<< "\x1b[0m\n"
		<< "\t\t\t\t\x1b[36m" // устанавливаем голубые (36) буквы
		<< "Where"
		<< "\x1b[0m\n"
		<< "\t\t\t\t\t\x1b[35m" // устанавливаем пурпурные (35) буквы - вместо фиолетового
		<< "A pheasant"
		<< "\x1b[0m"
		<< endl;

	return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
